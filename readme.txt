受Learning an object tracker with a random forest and simulated measurements的启发，本程序主要做一下工作：
1.对文章中的方法进行复现
2.针对文章的不足，提出三点改进：
    1.使用基于boosting思想的XGB来进行预测，可以获得更好的精度，可以处理缺失值，因此可以使用滑窗
    2.使用滑窗法，解决前文的实时性问题，且不需要一次估计就要训练一个预测期
    3.前文是从固定点出发，但实际上目标运动起点随机，原来的方法不适用，提出中心化的方法解决此问题
3.绘图
    1.第一组图还是展示非线性的问题
        1.展示直角坐标系下的香蕉噪声
        2.展示直角坐标系下的高斯噪声
    2.第二组图展示Xgboost目标跟踪的参量变化情况
        1.训练样本数量
            [1000,3000,10000,20000,50000,100000]
            [1.012081,0.965389,0.919235,0.911213,0.890231,0.870439]
        2.树的数量
            [50,100,150,200,300,500,1000,2000]
            [1.393898,0.959566,0.926564,0.919235,0.911547,0.907572,0.903101,0.903128]
        3.滑动窗口的长度
            [4,7,10,13,16]
            [1.007379,0.953249,0.918272,0.903778,0.902654]
    3.第三组图展示在一定场景下的跟踪的比较，比较的方法有随机森林，XGBoost，卡尔曼，粒子滤波
        1.航迹展示
        2.香蕉配置
            rangeGaussian=[0,0.005]
            angleGaussian=[0,0.02]
        2.高斯配置
            rangeGaussian=[0,0.05]
            angleGaussian=[0,0.005]
        注：粒子滤波有发散现象


4月18日 改进版
前面的仿真的雷达场景设置的不好，重新设计
雷达仿照真实雷达的场景，评估某个小监控区域[1000,1000]的滤波效果
监控区域距离雷达的距离*2, 10km, 50km
量测误差*2, [0.2m,0.001rad]
固定随机起始*2
一共是8个图

























